{"ast":null,"code":"var _jsxFileName = \"F:\\\\Github\\\\WeatherApp\\\\src\\\\HomeComponents\\\\Forecast\\\\Forecast.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Forecast.css\";\nimport { BsCloudRainHeavyFill, BsFillCloudHaze2Fill, BsCloudSnowFill, BsFillCloudFogFill, BsSun } from \"react-icons/bs\";\nimport { RiMistFill } from \"react-icons/ri\";\nimport { WiSmoke } from \"react-icons/wi\";\nimport { GiHeatHaze, GiDustCloud, GiSandstorm, GiSmokingVolcano, GiWindSlap, GiWhirlwind } from \"react-icons/gi\";\nimport { MdThunderstorm } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast(props) {\n  _s();\n  const forecastData = props.foreCastData;\n  const [DaysData, setDaysData] = React.useState([]);\n  React.useEffect(() => {\n    var _forecastData$;\n    let Day1 = (_forecastData$ = forecastData[0]) === null || _forecastData$ === void 0 ? void 0 : _forecastData$.dt;\n    let selectedData = [];\n    forecastData === null || forecastData === void 0 ? void 0 : forecastData.map(item => {\n      if (item.dt === Day1) {\n        selectedData.push(item);\n        Day1 += 86400;\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setDaysData(selectedData);\n  }, [forecastData]);\n  console.log(DaysData);\n  const weatherImage = weather => {\n    if (weather === \"Rain\") {\n      return /*#__PURE__*/_jsxDEV(BsCloudRainHeavyFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Clouds\") {\n      return /*#__PURE__*/_jsxDEV(BsFillCloudHaze2Fill, {\n        style: {\n          color: \"#F0F0F0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Snow\") {\n      return /*#__PURE__*/_jsxDEV(BsCloudSnowFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Mist\") {\n      return /*#__PURE__*/_jsxDEV(RiMistFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Smoke\") {\n      return /*#__PURE__*/_jsxDEV(WiSmoke, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Haze\") {\n      return /*#__PURE__*/_jsxDEV(GiHeatHaze, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Dust\") {\n      return /*#__PURE__*/_jsxDEV(GiDustCloud, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Fog\") {\n      return /*#__PURE__*/_jsxDEV(BsFillCloudFogFill, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Sand\") {\n      return /*#__PURE__*/_jsxDEV(GiSandstorm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Ash\") {\n      return /*#__PURE__*/_jsxDEV(GiSmokingVolcano, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Squall\") {\n      return /*#__PURE__*/_jsxDEV(GiWindSlap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Tornado\") {\n      return /*#__PURE__*/_jsxDEV(GiWhirlwind, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Clear\") {\n      return /*#__PURE__*/_jsxDEV(BsSun, {\n        style: {\n          color: \"#FFA500\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n    } else if (weather === \"Thunderstorm\") {\n      return /*#__PURE__*/_jsxDEV(MdThunderstorm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${props.currentData.weather.icon}.png`,\n        alt: \"\",\n        width: \"100px\",\n        height: \"100px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Forecast\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-header\",\n        children: [\"five day forecast\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-notify\",\n          children: props.failedFetch ? \"network error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-items-holder\",\n        children: DaysData.map((item, index) => {\n          const date = new Date(item.dt * 1000);\n          const dayOfWeek = date.toLocaleDateString(\"en-US\", {\n            weekday: \"long\"\n          });\n          const dateString = date.getDate() === new Date().getDate() ? \"Today\" : dayOfWeek;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-date\",\n              children: dateString\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-weather\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: weatherImage(item.weather[0].main)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }, this), item.weather[0].main]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecast-temp\",\n              children: [item.main.temp, \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Forecast, \"bvqYjT+B25ZA8xYODAuGFSXsKF4=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","BsCloudRainHeavyFill","BsFillCloudHaze2Fill","BsCloudSnowFill","BsFillCloudFogFill","BsSun","RiMistFill","WiSmoke","GiHeatHaze","GiDustCloud","GiSandstorm","GiSmokingVolcano","GiWindSlap","GiWhirlwind","MdThunderstorm","Forecast","props","forecastData","foreCastData","DaysData","setDaysData","useState","useEffect","Day1","dt","selectedData","map","item","push","console","log","weatherImage","weather","color","currentData","icon","failedFetch","index","date","Date","dayOfWeek","toLocaleDateString","weekday","dateString","getDate","main","temp"],"sources":["F:/Github/WeatherApp/src/HomeComponents/Forecast/Forecast.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Forecast.css\";\nimport {\n  BsCloudRainHeavyFill,\n  BsFillCloudHaze2Fill,\n  BsCloudSnowFill,\n  BsFillCloudFogFill,\n  BsSun,\n} from \"react-icons/bs\";\nimport { RiMistFill } from \"react-icons/ri\";\nimport { WiSmoke } from \"react-icons/wi\";\nimport {\n  GiHeatHaze,\n  GiDustCloud,\n  GiSandstorm,\n  GiSmokingVolcano,\n  GiWindSlap,\n  GiWhirlwind,\n} from \"react-icons/gi\";\nimport { MdThunderstorm } from \"react-icons/md\";\n\nfunction Forecast(props) {\n  const forecastData = props.foreCastData;\n  const [DaysData, setDaysData] = React.useState([]);\n\n  React.useEffect(() => {\n    let Day1 = forecastData[0]?.dt;\n    let selectedData = [];\n    forecastData?.map((item) => {\n      if (item.dt === Day1) {\n        selectedData.push(item);\n        Day1 += 86400;\n        return false;\n      } else {\n        return true;\n      }\n    });\n    setDaysData(selectedData);\n  }, [forecastData]);\n  console.log(DaysData);\n  const weatherImage = (weather) => {\n    if (weather === \"Rain\") {\n      return <BsCloudRainHeavyFill />;\n    } else if (weather === \"Clouds\") {\n      return <BsFillCloudHaze2Fill style={{ color: \"#F0F0F0\" }} />;\n    } else if (weather === \"Snow\") {\n      return <BsCloudSnowFill />;\n    } else if (weather === \"Mist\") {\n      return <RiMistFill />;\n    } else if (weather === \"Smoke\") {\n      return <WiSmoke />;\n    } else if (weather === \"Haze\") {\n      return <GiHeatHaze />;\n    } else if (weather === \"Dust\") {\n      return <GiDustCloud />;\n    } else if (weather === \"Fog\") {\n      return <BsFillCloudFogFill />;\n    } else if (weather === \"Sand\") {\n      return <GiSandstorm />;\n    } else if (weather === \"Ash\") {\n      return <GiSmokingVolcano />;\n    } else if (weather === \"Squall\") {\n      return <GiWindSlap />;\n    } else if (weather === \"Tornado\") {\n      return <GiWhirlwind />;\n    } else if (weather === \"Clear\") {\n      return <BsSun style={{ color: \"#FFA500\" }} />;\n    } else if (weather === \"Thunderstorm\") {\n      return <MdThunderstorm />;\n    } else {\n      return (\n        <img\n          src={`https://openweathermap.org/img/wn/${props.currentData.weather.icon}.png`}\n          alt=\"\"\n          width=\"100px\"\n          height=\"100px\"\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"Forecast\">\n      <div className=\"forecast-container\">\n        <div className=\"forecast-header\">\n          five day forecast\n          <div className=\"error-notify\">\n            {props.failedFetch ? \"network error\" : \"\"}\n          </div>\n        </div>\n        <div className=\"forecast-items-holder\">\n          {DaysData.map((item, index) => {\n            const date = new Date(item.dt * 1000);\n            const dayOfWeek = date.toLocaleDateString(\"en-US\", {\n              weekday: \"long\",\n            });\n            const dateString =\n              date.getDate() === new Date().getDate() ? \"Today\" : dayOfWeek;\n\n            return (\n              <div className=\"forecast-item\" key={index}>\n                <div className=\"forecast-date\">{dateString}</div>\n                <div className=\"forecast-weather\">\n                  <h2>{weatherImage(item.weather[0].main)}</h2>\n\n                  {item.weather[0].main}\n                </div>\n                <div className=\"forecast-temp\">{item.main.temp}°C</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Forecast;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}